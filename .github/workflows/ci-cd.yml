name: Build, Push and Deploy Docker Images

on:
  push:
    branches:
      - main

jobs:

  build-and-push:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        password: ${{ secrets.DO_ACCESS_TOKEN }}

    - name: Build and push microservice1
      uses: docker/build-push-action@v6
      with:
        push: true
        provenance: false
        build-args: MICROSERVICE_PATH=./microservice1
        tags: ${{ secrets.REGISTRY_HOST }}/${{ secrets.REGISTRY_REPOSITORY_NAME }}/app:microservice1

    - name: Build and push microservice2
      uses: docker/build-push-action@v6
      with:
        push: true
        provenance: false
        build-args: MICROSERVICE_PATH=./microservice2
        tags: ${{ secrets.REGISTRY_HOST }}/${{ secrets.REGISTRY_REPOSITORY_NAME }}/app:microservice2

  deploy:

    runs-on: ubuntu-latest

    needs: build-and-push

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    - name: Copy Docker Compose to Server
      run: sshpass -p ${{ secrets.SERVER_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml docker-compose.prod.yml scripts/generate-env.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:./
      
    - name: Deploy to Server
      run: |
        sshpass -p ${{ secrets.SERVER_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          docker login -u ${{ secrets.DO_ACCESS_TOKEN }} -p ${{ secrets.DO_ACCESS_TOKEN }} ${{ secrets.REGISTRY_HOST }}

          # Install Docker Compose
          VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '"' -f 4)
          sudo curl -L "https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          # Generate .env file from GitHub Secrets
          chmod +x ./generate-env.sh
          ./generate-env.sh
       
          docker-compose down || true
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
        EOF
